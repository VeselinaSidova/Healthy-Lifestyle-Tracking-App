@using Microsoft.AspNetCore.Identity

@model AllExercisesQueryModel

@{
    ViewBag.Title = "All Exercises";
}

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<form method="get">
    <div class="row mb-12">
        <div class="mb-1 form-group col-md-6">
            <div class="form-group">
                <label asp-for="Category">Search by Category</label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>
        <div class="mb-1 form-group col-md-6">
            <div class="form-group">
                <label asp-for="Sorting">Sort</label>
                <select asp-for="Sorting" class="form-control">
                    <option value="1" selected>Name</option>
                    <option value="2">Category</option>
                    <option value="3">Date Created</option>
                </select>
            </div>
        </div>
        <div class="m-auto pb-5 form-group col-md-6">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="Search for...">
        </div>
    </div>
</form>

@if (SignInManager.IsSignedIn(User))
{
    var useId = User.GetId();
    var userIsAdmin = User.IsAdmin();

    <div class="row">
        @foreach (var exercise in Model.Exercises)
        {
            <div class="col-md-3">
                <div class="card" style="width: 18rem;">
                    <img class="card-img-top" src="@exercise.ImageUrl" alt="@exercise.Name">
                    <div class="card-body">
                        <h5 class="card-title">@exercise.Name</h5>
                        <p class="card-text">@exercise.CaloriesPerHour kcal\hour</p>
                        <p class="card-text">Category: @exercise.ExerciseCategory</p>
                        @if (!userIsAdmin)
                        {
                            <a asp-controller="Exercises" asp-action="Track" asp-route-id="@exercise.Id" cite asp-route-information="@exercise.Name" class="btn btn-primary">Track</a>
                        }
                        else if (userIsAdmin)
                        {
                            <a asp-controller="Exercises" asp-action="Edit" asp-route-id="@exercise.Id" cite asp-route-information="@exercise.Name" class="btn btn-warning">Edit</a>
                            <button class="btn btn-danger delete"
                                    data-id="@exercise.Id"
                                    data-controller="Exercises"
                                    data-action="Delete"
                                    data-body-message="Are you sure you want to delete exercise '@exercise.Name'?">
                                Delete
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="row">
        @foreach (var exercise in Model.Exercises)
        {
            <div class="col-md-3">
                <div class="card" style="width: 18rem;">
                    <img class="card-img-top" src="@exercise.ImageUrl" alt="@exercise.Name">
                    <div class="card-body">
                        <h5 class="card-title">@exercise.Name</h5>
                        <p class="card-text">@exercise.CaloriesPerHour kcal\hour</p>
                        <p class="card-text">Category: @exercise.ExerciseCategory</p>
                    </div>
                </div>
            </div>
        }
    </div>
}


@if (!Model.Exercises.Any())
{
    <h2 class="text-center">No exercises found by the given criteria!</h2>
}

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalExercises / AllExercisesQueryModel.ExercisesPerPage);
}

<div class="row">
    <div class="col-md-6">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" style="margin-top:10px"
           asp-controller="Exercises"
           asp-action="All"
           asp-route-currentPage="@(previousPage)"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>

    @{
        var disableButton = Model.CurrentPage == maxPage || !Model.Exercises.Any();
    }

    <div class="col-md-6">
        <a class="btn btn-primary float-sm-right @(disableButton ? "disabled" : string.Empty)" style="margin-top:10px"
           asp-controller="Exercises"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">>></a>
    </div>
</div>

